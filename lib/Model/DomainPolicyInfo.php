<?php
/**
 * DomainPolicyInfo
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.eu-1.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.eu-1.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.eu-1.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: 1.0.0-beta
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DomainPolicyInfo Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class DomainPolicyInfo implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'domain.PolicyInfo';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'created_at' => '\DateTime',
        'deleted_at' => '\DateTime',
        'id' => 'int',
        'updated_at' => '\DateTime',
        'alert_logic' => 'string',
        'api_command' => 'string',
        'cli_command' => 'string',
        'cloud_document' => 'string',
        'cloud_platform' => 'int',
        'cloud_platform_type' => 'string',
        'cloud_service' => 'int',
        'cloud_service_friendly' => 'string',
        'cloud_service_subtype' => 'string',
        'cloud_service_type' => 'string',
        'default_severity' => 'string',
        'description' => 'string',
        'event_type' => 'string',
        'mitre_attack_cloud_matrix' => 'string',
        'mitre_attack_cloud_subtype' => 'string',
        'policy_fail_query' => 'string',
        'policy_pass_query' => 'string',
        'policy_remediation' => 'string',
        'policy_severity' => 'int',
        'policy_statement' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'created_at' => 'date-time',
        'deleted_at' => 'date-time',
        'id' => 'integer',
        'updated_at' => 'date-time',
        'alert_logic' => null,
        'api_command' => null,
        'cli_command' => null,
        'cloud_document' => null,
        'cloud_platform' => 'int32',
        'cloud_platform_type' => null,
        'cloud_service' => 'int32',
        'cloud_service_friendly' => null,
        'cloud_service_subtype' => null,
        'cloud_service_type' => null,
        'default_severity' => null,
        'description' => null,
        'event_type' => null,
        'mitre_attack_cloud_matrix' => null,
        'mitre_attack_cloud_subtype' => null,
        'policy_fail_query' => null,
        'policy_pass_query' => null,
        'policy_remediation' => null,
        'policy_severity' => 'int32',
        'policy_statement' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'created_at' => 'CreatedAt',
        'deleted_at' => 'DeletedAt',
        'id' => 'ID',
        'updated_at' => 'UpdatedAt',
        'alert_logic' => 'alert_logic',
        'api_command' => 'api_command',
        'cli_command' => 'cli_command',
        'cloud_document' => 'cloud_document',
        'cloud_platform' => 'cloud_platform',
        'cloud_platform_type' => 'cloud_platform_type',
        'cloud_service' => 'cloud_service',
        'cloud_service_friendly' => 'cloud_service_friendly',
        'cloud_service_subtype' => 'cloud_service_subtype',
        'cloud_service_type' => 'cloud_service_type',
        'default_severity' => 'default_severity',
        'description' => 'description',
        'event_type' => 'event_type',
        'mitre_attack_cloud_matrix' => 'mitre_attack_cloud_matrix',
        'mitre_attack_cloud_subtype' => 'mitre_attack_cloud_subtype',
        'policy_fail_query' => 'policy_fail_query',
        'policy_pass_query' => 'policy_pass_query',
        'policy_remediation' => 'policy_remediation',
        'policy_severity' => 'policy_severity',
        'policy_statement' => 'policy_statement'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'created_at' => 'setCreatedAt',
        'deleted_at' => 'setDeletedAt',
        'id' => 'setId',
        'updated_at' => 'setUpdatedAt',
        'alert_logic' => 'setAlertLogic',
        'api_command' => 'setApiCommand',
        'cli_command' => 'setCliCommand',
        'cloud_document' => 'setCloudDocument',
        'cloud_platform' => 'setCloudPlatform',
        'cloud_platform_type' => 'setCloudPlatformType',
        'cloud_service' => 'setCloudService',
        'cloud_service_friendly' => 'setCloudServiceFriendly',
        'cloud_service_subtype' => 'setCloudServiceSubtype',
        'cloud_service_type' => 'setCloudServiceType',
        'default_severity' => 'setDefaultSeverity',
        'description' => 'setDescription',
        'event_type' => 'setEventType',
        'mitre_attack_cloud_matrix' => 'setMitreAttackCloudMatrix',
        'mitre_attack_cloud_subtype' => 'setMitreAttackCloudSubtype',
        'policy_fail_query' => 'setPolicyFailQuery',
        'policy_pass_query' => 'setPolicyPassQuery',
        'policy_remediation' => 'setPolicyRemediation',
        'policy_severity' => 'setPolicySeverity',
        'policy_statement' => 'setPolicyStatement'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'created_at' => 'getCreatedAt',
        'deleted_at' => 'getDeletedAt',
        'id' => 'getId',
        'updated_at' => 'getUpdatedAt',
        'alert_logic' => 'getAlertLogic',
        'api_command' => 'getApiCommand',
        'cli_command' => 'getCliCommand',
        'cloud_document' => 'getCloudDocument',
        'cloud_platform' => 'getCloudPlatform',
        'cloud_platform_type' => 'getCloudPlatformType',
        'cloud_service' => 'getCloudService',
        'cloud_service_friendly' => 'getCloudServiceFriendly',
        'cloud_service_subtype' => 'getCloudServiceSubtype',
        'cloud_service_type' => 'getCloudServiceType',
        'default_severity' => 'getDefaultSeverity',
        'description' => 'getDescription',
        'event_type' => 'getEventType',
        'mitre_attack_cloud_matrix' => 'getMitreAttackCloudMatrix',
        'mitre_attack_cloud_subtype' => 'getMitreAttackCloudSubtype',
        'policy_fail_query' => 'getPolicyFailQuery',
        'policy_pass_query' => 'getPolicyPassQuery',
        'policy_remediation' => 'getPolicyRemediation',
        'policy_severity' => 'getPolicySeverity',
        'policy_statement' => 'getPolicyStatement'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['created_at'] = $data['created_at'] ?? null;
        $this->container['deleted_at'] = $data['deleted_at'] ?? null;
        $this->container['id'] = $data['id'] ?? null;
        $this->container['updated_at'] = $data['updated_at'] ?? null;
        $this->container['alert_logic'] = $data['alert_logic'] ?? null;
        $this->container['api_command'] = $data['api_command'] ?? null;
        $this->container['cli_command'] = $data['cli_command'] ?? null;
        $this->container['cloud_document'] = $data['cloud_document'] ?? null;
        $this->container['cloud_platform'] = $data['cloud_platform'] ?? null;
        $this->container['cloud_platform_type'] = $data['cloud_platform_type'] ?? null;
        $this->container['cloud_service'] = $data['cloud_service'] ?? null;
        $this->container['cloud_service_friendly'] = $data['cloud_service_friendly'] ?? null;
        $this->container['cloud_service_subtype'] = $data['cloud_service_subtype'] ?? null;
        $this->container['cloud_service_type'] = $data['cloud_service_type'] ?? null;
        $this->container['default_severity'] = $data['default_severity'] ?? null;
        $this->container['description'] = $data['description'] ?? null;
        $this->container['event_type'] = $data['event_type'] ?? null;
        $this->container['mitre_attack_cloud_matrix'] = $data['mitre_attack_cloud_matrix'] ?? null;
        $this->container['mitre_attack_cloud_subtype'] = $data['mitre_attack_cloud_subtype'] ?? null;
        $this->container['policy_fail_query'] = $data['policy_fail_query'] ?? null;
        $this->container['policy_pass_query'] = $data['policy_pass_query'] ?? null;
        $this->container['policy_remediation'] = $data['policy_remediation'] ?? null;
        $this->container['policy_severity'] = $data['policy_severity'] ?? null;
        $this->container['policy_statement'] = $data['policy_statement'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        if ($this->container['created_at'] === null) {
            $invalidProperties[] = "'created_at' can't be null";
        }
        if ($this->container['deleted_at'] === null) {
            $invalidProperties[] = "'deleted_at' can't be null";
        }
        if ($this->container['id'] === null) {
            $invalidProperties[] = "'id' can't be null";
        }
        if ($this->container['updated_at'] === null) {
            $invalidProperties[] = "'updated_at' can't be null";
        }
        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets created_at
     *
     * @return \DateTime
     */
    public function getCreatedAt()
    {
        return $this->container['created_at'];
    }

    /**
     * Sets created_at
     *
     * @param \DateTime $created_at created_at
     *
     * @return self
     */
    public function setCreatedAt($created_at)
    {
        $this->container['created_at'] = $created_at;

        return $this;
    }

    /**
     * Gets deleted_at
     *
     * @return \DateTime
     */
    public function getDeletedAt()
    {
        return $this->container['deleted_at'];
    }

    /**
     * Sets deleted_at
     *
     * @param \DateTime $deleted_at deleted_at
     *
     * @return self
     */
    public function setDeletedAt($deleted_at)
    {
        $this->container['deleted_at'] = $deleted_at;

        return $this;
    }

    /**
     * Gets id
     *
     * @return int
     */
    public function getId()
    {
        return $this->container['id'];
    }

    /**
     * Sets id
     *
     * @param int $id id
     *
     * @return self
     */
    public function setId($id)
    {
        $this->container['id'] = $id;

        return $this;
    }

    /**
     * Gets updated_at
     *
     * @return \DateTime
     */
    public function getUpdatedAt()
    {
        return $this->container['updated_at'];
    }

    /**
     * Sets updated_at
     *
     * @param \DateTime $updated_at updated_at
     *
     * @return self
     */
    public function setUpdatedAt($updated_at)
    {
        $this->container['updated_at'] = $updated_at;

        return $this;
    }

    /**
     * Gets alert_logic
     *
     * @return string|null
     */
    public function getAlertLogic()
    {
        return $this->container['alert_logic'];
    }

    /**
     * Sets alert_logic
     *
     * @param string|null $alert_logic alert_logic
     *
     * @return self
     */
    public function setAlertLogic($alert_logic)
    {
        $this->container['alert_logic'] = $alert_logic;

        return $this;
    }

    /**
     * Gets api_command
     *
     * @return string|null
     */
    public function getApiCommand()
    {
        return $this->container['api_command'];
    }

    /**
     * Sets api_command
     *
     * @param string|null $api_command api_command
     *
     * @return self
     */
    public function setApiCommand($api_command)
    {
        $this->container['api_command'] = $api_command;

        return $this;
    }

    /**
     * Gets cli_command
     *
     * @return string|null
     */
    public function getCliCommand()
    {
        return $this->container['cli_command'];
    }

    /**
     * Sets cli_command
     *
     * @param string|null $cli_command cli_command
     *
     * @return self
     */
    public function setCliCommand($cli_command)
    {
        $this->container['cli_command'] = $cli_command;

        return $this;
    }

    /**
     * Gets cloud_document
     *
     * @return string|null
     */
    public function getCloudDocument()
    {
        return $this->container['cloud_document'];
    }

    /**
     * Sets cloud_document
     *
     * @param string|null $cloud_document cloud_document
     *
     * @return self
     */
    public function setCloudDocument($cloud_document)
    {
        $this->container['cloud_document'] = $cloud_document;

        return $this;
    }

    /**
     * Gets cloud_platform
     *
     * @return int|null
     */
    public function getCloudPlatform()
    {
        return $this->container['cloud_platform'];
    }

    /**
     * Sets cloud_platform
     *
     * @param int|null $cloud_platform cloud_platform
     *
     * @return self
     */
    public function setCloudPlatform($cloud_platform)
    {
        $this->container['cloud_platform'] = $cloud_platform;

        return $this;
    }

    /**
     * Gets cloud_platform_type
     *
     * @return string|null
     */
    public function getCloudPlatformType()
    {
        return $this->container['cloud_platform_type'];
    }

    /**
     * Sets cloud_platform_type
     *
     * @param string|null $cloud_platform_type cloud_platform_type
     *
     * @return self
     */
    public function setCloudPlatformType($cloud_platform_type)
    {
        $this->container['cloud_platform_type'] = $cloud_platform_type;

        return $this;
    }

    /**
     * Gets cloud_service
     *
     * @return int|null
     */
    public function getCloudService()
    {
        return $this->container['cloud_service'];
    }

    /**
     * Sets cloud_service
     *
     * @param int|null $cloud_service cloud_service
     *
     * @return self
     */
    public function setCloudService($cloud_service)
    {
        $this->container['cloud_service'] = $cloud_service;

        return $this;
    }

    /**
     * Gets cloud_service_friendly
     *
     * @return string|null
     */
    public function getCloudServiceFriendly()
    {
        return $this->container['cloud_service_friendly'];
    }

    /**
     * Sets cloud_service_friendly
     *
     * @param string|null $cloud_service_friendly cloud_service_friendly
     *
     * @return self
     */
    public function setCloudServiceFriendly($cloud_service_friendly)
    {
        $this->container['cloud_service_friendly'] = $cloud_service_friendly;

        return $this;
    }

    /**
     * Gets cloud_service_subtype
     *
     * @return string|null
     */
    public function getCloudServiceSubtype()
    {
        return $this->container['cloud_service_subtype'];
    }

    /**
     * Sets cloud_service_subtype
     *
     * @param string|null $cloud_service_subtype cloud_service_subtype
     *
     * @return self
     */
    public function setCloudServiceSubtype($cloud_service_subtype)
    {
        $this->container['cloud_service_subtype'] = $cloud_service_subtype;

        return $this;
    }

    /**
     * Gets cloud_service_type
     *
     * @return string|null
     */
    public function getCloudServiceType()
    {
        return $this->container['cloud_service_type'];
    }

    /**
     * Sets cloud_service_type
     *
     * @param string|null $cloud_service_type cloud_service_type
     *
     * @return self
     */
    public function setCloudServiceType($cloud_service_type)
    {
        $this->container['cloud_service_type'] = $cloud_service_type;

        return $this;
    }

    /**
     * Gets default_severity
     *
     * @return string|null
     */
    public function getDefaultSeverity()
    {
        return $this->container['default_severity'];
    }

    /**
     * Sets default_severity
     *
     * @param string|null $default_severity default_severity
     *
     * @return self
     */
    public function setDefaultSeverity($default_severity)
    {
        $this->container['default_severity'] = $default_severity;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string|null
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string|null $description description
     *
     * @return self
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets event_type
     *
     * @return string|null
     */
    public function getEventType()
    {
        return $this->container['event_type'];
    }

    /**
     * Sets event_type
     *
     * @param string|null $event_type event_type
     *
     * @return self
     */
    public function setEventType($event_type)
    {
        $this->container['event_type'] = $event_type;

        return $this;
    }

    /**
     * Gets mitre_attack_cloud_matrix
     *
     * @return string|null
     */
    public function getMitreAttackCloudMatrix()
    {
        return $this->container['mitre_attack_cloud_matrix'];
    }

    /**
     * Sets mitre_attack_cloud_matrix
     *
     * @param string|null $mitre_attack_cloud_matrix mitre_attack_cloud_matrix
     *
     * @return self
     */
    public function setMitreAttackCloudMatrix($mitre_attack_cloud_matrix)
    {
        $this->container['mitre_attack_cloud_matrix'] = $mitre_attack_cloud_matrix;

        return $this;
    }

    /**
     * Gets mitre_attack_cloud_subtype
     *
     * @return string|null
     */
    public function getMitreAttackCloudSubtype()
    {
        return $this->container['mitre_attack_cloud_subtype'];
    }

    /**
     * Sets mitre_attack_cloud_subtype
     *
     * @param string|null $mitre_attack_cloud_subtype mitre_attack_cloud_subtype
     *
     * @return self
     */
    public function setMitreAttackCloudSubtype($mitre_attack_cloud_subtype)
    {
        $this->container['mitre_attack_cloud_subtype'] = $mitre_attack_cloud_subtype;

        return $this;
    }

    /**
     * Gets policy_fail_query
     *
     * @return string|null
     */
    public function getPolicyFailQuery()
    {
        return $this->container['policy_fail_query'];
    }

    /**
     * Sets policy_fail_query
     *
     * @param string|null $policy_fail_query policy_fail_query
     *
     * @return self
     */
    public function setPolicyFailQuery($policy_fail_query)
    {
        $this->container['policy_fail_query'] = $policy_fail_query;

        return $this;
    }

    /**
     * Gets policy_pass_query
     *
     * @return string|null
     */
    public function getPolicyPassQuery()
    {
        return $this->container['policy_pass_query'];
    }

    /**
     * Sets policy_pass_query
     *
     * @param string|null $policy_pass_query policy_pass_query
     *
     * @return self
     */
    public function setPolicyPassQuery($policy_pass_query)
    {
        $this->container['policy_pass_query'] = $policy_pass_query;

        return $this;
    }

    /**
     * Gets policy_remediation
     *
     * @return string|null
     */
    public function getPolicyRemediation()
    {
        return $this->container['policy_remediation'];
    }

    /**
     * Sets policy_remediation
     *
     * @param string|null $policy_remediation policy_remediation
     *
     * @return self
     */
    public function setPolicyRemediation($policy_remediation)
    {
        $this->container['policy_remediation'] = $policy_remediation;

        return $this;
    }

    /**
     * Gets policy_severity
     *
     * @return int|null
     */
    public function getPolicySeverity()
    {
        return $this->container['policy_severity'];
    }

    /**
     * Sets policy_severity
     *
     * @param int|null $policy_severity policy_severity
     *
     * @return self
     */
    public function setPolicySeverity($policy_severity)
    {
        $this->container['policy_severity'] = $policy_severity;

        return $this;
    }

    /**
     * Gets policy_statement
     *
     * @return string|null
     */
    public function getPolicyStatement()
    {
        return $this->container['policy_statement'];
    }

    /**
     * Sets policy_statement
     *
     * @param string|null $policy_statement policy_statement
     *
     * @return self
     */
    public function setPolicyStatement($policy_statement)
    {
        $this->container['policy_statement'] = $policy_statement;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


