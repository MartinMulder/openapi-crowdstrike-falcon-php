<?php
/**
 * DomainKillChain
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.eu-1.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.eu-1.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.eu-1.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: 1.0.0-beta
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DomainKillChain Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class DomainKillChain implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'domain.KillChain';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'actions_and_objectives' => 'string',
        'command_and_control' => 'string',
        'delivery' => 'string',
        'exploitation' => 'string',
        'installation' => 'string',
        'objectives' => 'string',
        'reconnaissance' => 'string',
        'rich_text_actions_and_objectives' => 'string',
        'rich_text_command_and_control' => 'string',
        'rich_text_delivery' => 'string',
        'rich_text_exploitation' => 'string',
        'rich_text_installation' => 'string',
        'rich_text_objectives' => 'string',
        'rich_text_reconnaissance' => 'string',
        'rich_text_weaponization' => 'string',
        'weaponization' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'actions_and_objectives' => null,
        'command_and_control' => null,
        'delivery' => null,
        'exploitation' => null,
        'installation' => null,
        'objectives' => null,
        'reconnaissance' => null,
        'rich_text_actions_and_objectives' => null,
        'rich_text_command_and_control' => null,
        'rich_text_delivery' => null,
        'rich_text_exploitation' => null,
        'rich_text_installation' => null,
        'rich_text_objectives' => null,
        'rich_text_reconnaissance' => null,
        'rich_text_weaponization' => null,
        'weaponization' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'actions_and_objectives' => 'actions_and_objectives',
        'command_and_control' => 'command_and_control',
        'delivery' => 'delivery',
        'exploitation' => 'exploitation',
        'installation' => 'installation',
        'objectives' => 'objectives',
        'reconnaissance' => 'reconnaissance',
        'rich_text_actions_and_objectives' => 'rich_text_actions_and_objectives',
        'rich_text_command_and_control' => 'rich_text_command_and_control',
        'rich_text_delivery' => 'rich_text_delivery',
        'rich_text_exploitation' => 'rich_text_exploitation',
        'rich_text_installation' => 'rich_text_installation',
        'rich_text_objectives' => 'rich_text_objectives',
        'rich_text_reconnaissance' => 'rich_text_reconnaissance',
        'rich_text_weaponization' => 'rich_text_weaponization',
        'weaponization' => 'weaponization'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'actions_and_objectives' => 'setActionsAndObjectives',
        'command_and_control' => 'setCommandAndControl',
        'delivery' => 'setDelivery',
        'exploitation' => 'setExploitation',
        'installation' => 'setInstallation',
        'objectives' => 'setObjectives',
        'reconnaissance' => 'setReconnaissance',
        'rich_text_actions_and_objectives' => 'setRichTextActionsAndObjectives',
        'rich_text_command_and_control' => 'setRichTextCommandAndControl',
        'rich_text_delivery' => 'setRichTextDelivery',
        'rich_text_exploitation' => 'setRichTextExploitation',
        'rich_text_installation' => 'setRichTextInstallation',
        'rich_text_objectives' => 'setRichTextObjectives',
        'rich_text_reconnaissance' => 'setRichTextReconnaissance',
        'rich_text_weaponization' => 'setRichTextWeaponization',
        'weaponization' => 'setWeaponization'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'actions_and_objectives' => 'getActionsAndObjectives',
        'command_and_control' => 'getCommandAndControl',
        'delivery' => 'getDelivery',
        'exploitation' => 'getExploitation',
        'installation' => 'getInstallation',
        'objectives' => 'getObjectives',
        'reconnaissance' => 'getReconnaissance',
        'rich_text_actions_and_objectives' => 'getRichTextActionsAndObjectives',
        'rich_text_command_and_control' => 'getRichTextCommandAndControl',
        'rich_text_delivery' => 'getRichTextDelivery',
        'rich_text_exploitation' => 'getRichTextExploitation',
        'rich_text_installation' => 'getRichTextInstallation',
        'rich_text_objectives' => 'getRichTextObjectives',
        'rich_text_reconnaissance' => 'getRichTextReconnaissance',
        'rich_text_weaponization' => 'getRichTextWeaponization',
        'weaponization' => 'getWeaponization'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['actions_and_objectives'] = $data['actions_and_objectives'] ?? null;
        $this->container['command_and_control'] = $data['command_and_control'] ?? null;
        $this->container['delivery'] = $data['delivery'] ?? null;
        $this->container['exploitation'] = $data['exploitation'] ?? null;
        $this->container['installation'] = $data['installation'] ?? null;
        $this->container['objectives'] = $data['objectives'] ?? null;
        $this->container['reconnaissance'] = $data['reconnaissance'] ?? null;
        $this->container['rich_text_actions_and_objectives'] = $data['rich_text_actions_and_objectives'] ?? null;
        $this->container['rich_text_command_and_control'] = $data['rich_text_command_and_control'] ?? null;
        $this->container['rich_text_delivery'] = $data['rich_text_delivery'] ?? null;
        $this->container['rich_text_exploitation'] = $data['rich_text_exploitation'] ?? null;
        $this->container['rich_text_installation'] = $data['rich_text_installation'] ?? null;
        $this->container['rich_text_objectives'] = $data['rich_text_objectives'] ?? null;
        $this->container['rich_text_reconnaissance'] = $data['rich_text_reconnaissance'] ?? null;
        $this->container['rich_text_weaponization'] = $data['rich_text_weaponization'] ?? null;
        $this->container['weaponization'] = $data['weaponization'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets actions_and_objectives
     *
     * @return string|null
     */
    public function getActionsAndObjectives()
    {
        return $this->container['actions_and_objectives'];
    }

    /**
     * Sets actions_and_objectives
     *
     * @param string|null $actions_and_objectives actions_and_objectives
     *
     * @return self
     */
    public function setActionsAndObjectives($actions_and_objectives)
    {
        $this->container['actions_and_objectives'] = $actions_and_objectives;

        return $this;
    }

    /**
     * Gets command_and_control
     *
     * @return string|null
     */
    public function getCommandAndControl()
    {
        return $this->container['command_and_control'];
    }

    /**
     * Sets command_and_control
     *
     * @param string|null $command_and_control command_and_control
     *
     * @return self
     */
    public function setCommandAndControl($command_and_control)
    {
        $this->container['command_and_control'] = $command_and_control;

        return $this;
    }

    /**
     * Gets delivery
     *
     * @return string|null
     */
    public function getDelivery()
    {
        return $this->container['delivery'];
    }

    /**
     * Sets delivery
     *
     * @param string|null $delivery delivery
     *
     * @return self
     */
    public function setDelivery($delivery)
    {
        $this->container['delivery'] = $delivery;

        return $this;
    }

    /**
     * Gets exploitation
     *
     * @return string|null
     */
    public function getExploitation()
    {
        return $this->container['exploitation'];
    }

    /**
     * Sets exploitation
     *
     * @param string|null $exploitation exploitation
     *
     * @return self
     */
    public function setExploitation($exploitation)
    {
        $this->container['exploitation'] = $exploitation;

        return $this;
    }

    /**
     * Gets installation
     *
     * @return string|null
     */
    public function getInstallation()
    {
        return $this->container['installation'];
    }

    /**
     * Sets installation
     *
     * @param string|null $installation installation
     *
     * @return self
     */
    public function setInstallation($installation)
    {
        $this->container['installation'] = $installation;

        return $this;
    }

    /**
     * Gets objectives
     *
     * @return string|null
     */
    public function getObjectives()
    {
        return $this->container['objectives'];
    }

    /**
     * Sets objectives
     *
     * @param string|null $objectives objectives
     *
     * @return self
     */
    public function setObjectives($objectives)
    {
        $this->container['objectives'] = $objectives;

        return $this;
    }

    /**
     * Gets reconnaissance
     *
     * @return string|null
     */
    public function getReconnaissance()
    {
        return $this->container['reconnaissance'];
    }

    /**
     * Sets reconnaissance
     *
     * @param string|null $reconnaissance reconnaissance
     *
     * @return self
     */
    public function setReconnaissance($reconnaissance)
    {
        $this->container['reconnaissance'] = $reconnaissance;

        return $this;
    }

    /**
     * Gets rich_text_actions_and_objectives
     *
     * @return string|null
     */
    public function getRichTextActionsAndObjectives()
    {
        return $this->container['rich_text_actions_and_objectives'];
    }

    /**
     * Sets rich_text_actions_and_objectives
     *
     * @param string|null $rich_text_actions_and_objectives rich_text_actions_and_objectives
     *
     * @return self
     */
    public function setRichTextActionsAndObjectives($rich_text_actions_and_objectives)
    {
        $this->container['rich_text_actions_and_objectives'] = $rich_text_actions_and_objectives;

        return $this;
    }

    /**
     * Gets rich_text_command_and_control
     *
     * @return string|null
     */
    public function getRichTextCommandAndControl()
    {
        return $this->container['rich_text_command_and_control'];
    }

    /**
     * Sets rich_text_command_and_control
     *
     * @param string|null $rich_text_command_and_control rich_text_command_and_control
     *
     * @return self
     */
    public function setRichTextCommandAndControl($rich_text_command_and_control)
    {
        $this->container['rich_text_command_and_control'] = $rich_text_command_and_control;

        return $this;
    }

    /**
     * Gets rich_text_delivery
     *
     * @return string|null
     */
    public function getRichTextDelivery()
    {
        return $this->container['rich_text_delivery'];
    }

    /**
     * Sets rich_text_delivery
     *
     * @param string|null $rich_text_delivery rich_text_delivery
     *
     * @return self
     */
    public function setRichTextDelivery($rich_text_delivery)
    {
        $this->container['rich_text_delivery'] = $rich_text_delivery;

        return $this;
    }

    /**
     * Gets rich_text_exploitation
     *
     * @return string|null
     */
    public function getRichTextExploitation()
    {
        return $this->container['rich_text_exploitation'];
    }

    /**
     * Sets rich_text_exploitation
     *
     * @param string|null $rich_text_exploitation rich_text_exploitation
     *
     * @return self
     */
    public function setRichTextExploitation($rich_text_exploitation)
    {
        $this->container['rich_text_exploitation'] = $rich_text_exploitation;

        return $this;
    }

    /**
     * Gets rich_text_installation
     *
     * @return string|null
     */
    public function getRichTextInstallation()
    {
        return $this->container['rich_text_installation'];
    }

    /**
     * Sets rich_text_installation
     *
     * @param string|null $rich_text_installation rich_text_installation
     *
     * @return self
     */
    public function setRichTextInstallation($rich_text_installation)
    {
        $this->container['rich_text_installation'] = $rich_text_installation;

        return $this;
    }

    /**
     * Gets rich_text_objectives
     *
     * @return string|null
     */
    public function getRichTextObjectives()
    {
        return $this->container['rich_text_objectives'];
    }

    /**
     * Sets rich_text_objectives
     *
     * @param string|null $rich_text_objectives rich_text_objectives
     *
     * @return self
     */
    public function setRichTextObjectives($rich_text_objectives)
    {
        $this->container['rich_text_objectives'] = $rich_text_objectives;

        return $this;
    }

    /**
     * Gets rich_text_reconnaissance
     *
     * @return string|null
     */
    public function getRichTextReconnaissance()
    {
        return $this->container['rich_text_reconnaissance'];
    }

    /**
     * Sets rich_text_reconnaissance
     *
     * @param string|null $rich_text_reconnaissance rich_text_reconnaissance
     *
     * @return self
     */
    public function setRichTextReconnaissance($rich_text_reconnaissance)
    {
        $this->container['rich_text_reconnaissance'] = $rich_text_reconnaissance;

        return $this;
    }

    /**
     * Gets rich_text_weaponization
     *
     * @return string|null
     */
    public function getRichTextWeaponization()
    {
        return $this->container['rich_text_weaponization'];
    }

    /**
     * Sets rich_text_weaponization
     *
     * @param string|null $rich_text_weaponization rich_text_weaponization
     *
     * @return self
     */
    public function setRichTextWeaponization($rich_text_weaponization)
    {
        $this->container['rich_text_weaponization'] = $rich_text_weaponization;

        return $this;
    }

    /**
     * Gets weaponization
     *
     * @return string|null
     */
    public function getWeaponization()
    {
        return $this->container['weaponization'];
    }

    /**
     * Sets weaponization
     *
     * @param string|null $weaponization weaponization
     *
     * @return self
     */
    public function setWeaponization($weaponization)
    {
        $this->container['weaponization'] = $weaponization;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


