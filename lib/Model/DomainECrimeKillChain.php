<?php
/**
 * DomainECrimeKillChain
 *
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.eu-1.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.eu-1.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.eu-1.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: 1.0.0-beta
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DomainECrimeKillChain Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null  
 */
class DomainECrimeKillChain implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'domain.ECrimeKillChain';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'attribution' => 'string',
        'crimes' => 'string',
        'customers' => 'string',
        'marketing' => 'string',
        'monetization' => 'string',
        'rich_text_attribution' => 'string',
        'rich_text_crimes' => 'string',
        'rich_text_customers' => 'string',
        'rich_text_marketing' => 'string',
        'rich_text_monetization' => 'string',
        'rich_text_services_offered' => 'string',
        'rich_text_services_used' => 'string',
        'rich_text_technical_tradecraft' => 'string',
        'rich_text_victims' => 'string',
        'services_offered' => 'string',
        'services_used' => 'string',
        'technical_tradecraft' => 'string',
        'victims' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'attribution' => null,
        'crimes' => null,
        'customers' => null,
        'marketing' => null,
        'monetization' => null,
        'rich_text_attribution' => null,
        'rich_text_crimes' => null,
        'rich_text_customers' => null,
        'rich_text_marketing' => null,
        'rich_text_monetization' => null,
        'rich_text_services_offered' => null,
        'rich_text_services_used' => null,
        'rich_text_technical_tradecraft' => null,
        'rich_text_victims' => null,
        'services_offered' => null,
        'services_used' => null,
        'technical_tradecraft' => null,
        'victims' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'attribution' => 'attribution',
        'crimes' => 'crimes',
        'customers' => 'customers',
        'marketing' => 'marketing',
        'monetization' => 'monetization',
        'rich_text_attribution' => 'rich_text_attribution',
        'rich_text_crimes' => 'rich_text_crimes',
        'rich_text_customers' => 'rich_text_customers',
        'rich_text_marketing' => 'rich_text_marketing',
        'rich_text_monetization' => 'rich_text_monetization',
        'rich_text_services_offered' => 'rich_text_services_offered',
        'rich_text_services_used' => 'rich_text_services_used',
        'rich_text_technical_tradecraft' => 'rich_text_technical_tradecraft',
        'rich_text_victims' => 'rich_text_victims',
        'services_offered' => 'services_offered',
        'services_used' => 'services_used',
        'technical_tradecraft' => 'technical_tradecraft',
        'victims' => 'victims'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'attribution' => 'setAttribution',
        'crimes' => 'setCrimes',
        'customers' => 'setCustomers',
        'marketing' => 'setMarketing',
        'monetization' => 'setMonetization',
        'rich_text_attribution' => 'setRichTextAttribution',
        'rich_text_crimes' => 'setRichTextCrimes',
        'rich_text_customers' => 'setRichTextCustomers',
        'rich_text_marketing' => 'setRichTextMarketing',
        'rich_text_monetization' => 'setRichTextMonetization',
        'rich_text_services_offered' => 'setRichTextServicesOffered',
        'rich_text_services_used' => 'setRichTextServicesUsed',
        'rich_text_technical_tradecraft' => 'setRichTextTechnicalTradecraft',
        'rich_text_victims' => 'setRichTextVictims',
        'services_offered' => 'setServicesOffered',
        'services_used' => 'setServicesUsed',
        'technical_tradecraft' => 'setTechnicalTradecraft',
        'victims' => 'setVictims'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'attribution' => 'getAttribution',
        'crimes' => 'getCrimes',
        'customers' => 'getCustomers',
        'marketing' => 'getMarketing',
        'monetization' => 'getMonetization',
        'rich_text_attribution' => 'getRichTextAttribution',
        'rich_text_crimes' => 'getRichTextCrimes',
        'rich_text_customers' => 'getRichTextCustomers',
        'rich_text_marketing' => 'getRichTextMarketing',
        'rich_text_monetization' => 'getRichTextMonetization',
        'rich_text_services_offered' => 'getRichTextServicesOffered',
        'rich_text_services_used' => 'getRichTextServicesUsed',
        'rich_text_technical_tradecraft' => 'getRichTextTechnicalTradecraft',
        'rich_text_victims' => 'getRichTextVictims',
        'services_offered' => 'getServicesOffered',
        'services_used' => 'getServicesUsed',
        'technical_tradecraft' => 'getTechnicalTradecraft',
        'victims' => 'getVictims'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['attribution'] = $data['attribution'] ?? null;
        $this->container['crimes'] = $data['crimes'] ?? null;
        $this->container['customers'] = $data['customers'] ?? null;
        $this->container['marketing'] = $data['marketing'] ?? null;
        $this->container['monetization'] = $data['monetization'] ?? null;
        $this->container['rich_text_attribution'] = $data['rich_text_attribution'] ?? null;
        $this->container['rich_text_crimes'] = $data['rich_text_crimes'] ?? null;
        $this->container['rich_text_customers'] = $data['rich_text_customers'] ?? null;
        $this->container['rich_text_marketing'] = $data['rich_text_marketing'] ?? null;
        $this->container['rich_text_monetization'] = $data['rich_text_monetization'] ?? null;
        $this->container['rich_text_services_offered'] = $data['rich_text_services_offered'] ?? null;
        $this->container['rich_text_services_used'] = $data['rich_text_services_used'] ?? null;
        $this->container['rich_text_technical_tradecraft'] = $data['rich_text_technical_tradecraft'] ?? null;
        $this->container['rich_text_victims'] = $data['rich_text_victims'] ?? null;
        $this->container['services_offered'] = $data['services_offered'] ?? null;
        $this->container['services_used'] = $data['services_used'] ?? null;
        $this->container['technical_tradecraft'] = $data['technical_tradecraft'] ?? null;
        $this->container['victims'] = $data['victims'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets attribution
     *
     * @return string|null
     */
    public function getAttribution()
    {
        return $this->container['attribution'];
    }

    /**
     * Sets attribution
     *
     * @param string|null $attribution attribution
     *
     * @return self
     */
    public function setAttribution($attribution)
    {
        $this->container['attribution'] = $attribution;

        return $this;
    }

    /**
     * Gets crimes
     *
     * @return string|null
     */
    public function getCrimes()
    {
        return $this->container['crimes'];
    }

    /**
     * Sets crimes
     *
     * @param string|null $crimes crimes
     *
     * @return self
     */
    public function setCrimes($crimes)
    {
        $this->container['crimes'] = $crimes;

        return $this;
    }

    /**
     * Gets customers
     *
     * @return string|null
     */
    public function getCustomers()
    {
        return $this->container['customers'];
    }

    /**
     * Sets customers
     *
     * @param string|null $customers customers
     *
     * @return self
     */
    public function setCustomers($customers)
    {
        $this->container['customers'] = $customers;

        return $this;
    }

    /**
     * Gets marketing
     *
     * @return string|null
     */
    public function getMarketing()
    {
        return $this->container['marketing'];
    }

    /**
     * Sets marketing
     *
     * @param string|null $marketing marketing
     *
     * @return self
     */
    public function setMarketing($marketing)
    {
        $this->container['marketing'] = $marketing;

        return $this;
    }

    /**
     * Gets monetization
     *
     * @return string|null
     */
    public function getMonetization()
    {
        return $this->container['monetization'];
    }

    /**
     * Sets monetization
     *
     * @param string|null $monetization monetization
     *
     * @return self
     */
    public function setMonetization($monetization)
    {
        $this->container['monetization'] = $monetization;

        return $this;
    }

    /**
     * Gets rich_text_attribution
     *
     * @return string|null
     */
    public function getRichTextAttribution()
    {
        return $this->container['rich_text_attribution'];
    }

    /**
     * Sets rich_text_attribution
     *
     * @param string|null $rich_text_attribution rich_text_attribution
     *
     * @return self
     */
    public function setRichTextAttribution($rich_text_attribution)
    {
        $this->container['rich_text_attribution'] = $rich_text_attribution;

        return $this;
    }

    /**
     * Gets rich_text_crimes
     *
     * @return string|null
     */
    public function getRichTextCrimes()
    {
        return $this->container['rich_text_crimes'];
    }

    /**
     * Sets rich_text_crimes
     *
     * @param string|null $rich_text_crimes rich_text_crimes
     *
     * @return self
     */
    public function setRichTextCrimes($rich_text_crimes)
    {
        $this->container['rich_text_crimes'] = $rich_text_crimes;

        return $this;
    }

    /**
     * Gets rich_text_customers
     *
     * @return string|null
     */
    public function getRichTextCustomers()
    {
        return $this->container['rich_text_customers'];
    }

    /**
     * Sets rich_text_customers
     *
     * @param string|null $rich_text_customers rich_text_customers
     *
     * @return self
     */
    public function setRichTextCustomers($rich_text_customers)
    {
        $this->container['rich_text_customers'] = $rich_text_customers;

        return $this;
    }

    /**
     * Gets rich_text_marketing
     *
     * @return string|null
     */
    public function getRichTextMarketing()
    {
        return $this->container['rich_text_marketing'];
    }

    /**
     * Sets rich_text_marketing
     *
     * @param string|null $rich_text_marketing rich_text_marketing
     *
     * @return self
     */
    public function setRichTextMarketing($rich_text_marketing)
    {
        $this->container['rich_text_marketing'] = $rich_text_marketing;

        return $this;
    }

    /**
     * Gets rich_text_monetization
     *
     * @return string|null
     */
    public function getRichTextMonetization()
    {
        return $this->container['rich_text_monetization'];
    }

    /**
     * Sets rich_text_monetization
     *
     * @param string|null $rich_text_monetization rich_text_monetization
     *
     * @return self
     */
    public function setRichTextMonetization($rich_text_monetization)
    {
        $this->container['rich_text_monetization'] = $rich_text_monetization;

        return $this;
    }

    /**
     * Gets rich_text_services_offered
     *
     * @return string|null
     */
    public function getRichTextServicesOffered()
    {
        return $this->container['rich_text_services_offered'];
    }

    /**
     * Sets rich_text_services_offered
     *
     * @param string|null $rich_text_services_offered rich_text_services_offered
     *
     * @return self
     */
    public function setRichTextServicesOffered($rich_text_services_offered)
    {
        $this->container['rich_text_services_offered'] = $rich_text_services_offered;

        return $this;
    }

    /**
     * Gets rich_text_services_used
     *
     * @return string|null
     */
    public function getRichTextServicesUsed()
    {
        return $this->container['rich_text_services_used'];
    }

    /**
     * Sets rich_text_services_used
     *
     * @param string|null $rich_text_services_used rich_text_services_used
     *
     * @return self
     */
    public function setRichTextServicesUsed($rich_text_services_used)
    {
        $this->container['rich_text_services_used'] = $rich_text_services_used;

        return $this;
    }

    /**
     * Gets rich_text_technical_tradecraft
     *
     * @return string|null
     */
    public function getRichTextTechnicalTradecraft()
    {
        return $this->container['rich_text_technical_tradecraft'];
    }

    /**
     * Sets rich_text_technical_tradecraft
     *
     * @param string|null $rich_text_technical_tradecraft rich_text_technical_tradecraft
     *
     * @return self
     */
    public function setRichTextTechnicalTradecraft($rich_text_technical_tradecraft)
    {
        $this->container['rich_text_technical_tradecraft'] = $rich_text_technical_tradecraft;

        return $this;
    }

    /**
     * Gets rich_text_victims
     *
     * @return string|null
     */
    public function getRichTextVictims()
    {
        return $this->container['rich_text_victims'];
    }

    /**
     * Sets rich_text_victims
     *
     * @param string|null $rich_text_victims rich_text_victims
     *
     * @return self
     */
    public function setRichTextVictims($rich_text_victims)
    {
        $this->container['rich_text_victims'] = $rich_text_victims;

        return $this;
    }

    /**
     * Gets services_offered
     *
     * @return string|null
     */
    public function getServicesOffered()
    {
        return $this->container['services_offered'];
    }

    /**
     * Sets services_offered
     *
     * @param string|null $services_offered services_offered
     *
     * @return self
     */
    public function setServicesOffered($services_offered)
    {
        $this->container['services_offered'] = $services_offered;

        return $this;
    }

    /**
     * Gets services_used
     *
     * @return string|null
     */
    public function getServicesUsed()
    {
        return $this->container['services_used'];
    }

    /**
     * Sets services_used
     *
     * @param string|null $services_used services_used
     *
     * @return self
     */
    public function setServicesUsed($services_used)
    {
        $this->container['services_used'] = $services_used;

        return $this;
    }

    /**
     * Gets technical_tradecraft
     *
     * @return string|null
     */
    public function getTechnicalTradecraft()
    {
        return $this->container['technical_tradecraft'];
    }

    /**
     * Sets technical_tradecraft
     *
     * @param string|null $technical_tradecraft technical_tradecraft
     *
     * @return self
     */
    public function setTechnicalTradecraft($technical_tradecraft)
    {
        $this->container['technical_tradecraft'] = $technical_tradecraft;

        return $this;
    }

    /**
     * Gets victims
     *
     * @return string|null
     */
    public function getVictims()
    {
        return $this->container['victims'];
    }

    /**
     * Sets victims
     *
     * @param string|null $victims victims
     *
     * @return self
     */
    public function setVictims($victims)
    {
        $this->container['victims'] = $victims;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


