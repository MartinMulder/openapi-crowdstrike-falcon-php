<?php
/**
 * D4cRegistrationApiTest
 * PHP version 7.2
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * CrowdStrike API Specification
 *
 * Use this API specification as a reference for the API endpoints you can use to interact with your Falcon environment. These endpoints support authentication via OAuth2 and interact with detections and network containment. For detailed usage guides and examples, see our [documentation inside the Falcon console](https://falcon.eu-1.crowdstrike.com/support/documentation).     To use the APIs described below, combine the base URL with the path shown for each API endpoint. For commercial cloud customers, your base URL is `https://api.eu-1.crowdstrike.com`.    Each API endpoint requires authorization via an OAuth2 token. Your first API request should retrieve an OAuth2 token using the `oauth2/token` endpoint, such as `https://api.eu-1.crowdstrike.com/oauth2/token`. For subsequent requests, include the OAuth2 token in an HTTP authorization header. Tokens expire after 30 minutes, after which you should make a new token request to continue making API requests.
 *
 * The version of the OpenAPI document: 1.0.0-beta
 * 
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.0.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * D4cRegistrationApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class D4cRegistrationApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for createCSPMAzureAccount
     *
     * Creates a new account in our system for a customer and generates a script for them to run in their cloud environment to grant us access..
     *
     */
    public function testCreateCSPMAzureAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for createCSPMGCPAccount
     *
     * Creates a new account in our system for a customer and generates a new service account for them to add access to in their GCP environment to grant us access..
     *
     */
    public function testCreateCSPMGCPAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCSPMAzureAccount
     *
     * Return information about Azure account registration.
     *
     */
    public function testGetCSPMAzureAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCSPMAzureUserScripts
     *
     * Return a script for customer to run in their cloud environment to grant us access to their Azure environment.
     *
     */
    public function testGetCSPMAzureUserScripts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCSPMAzureUserScriptsAttachment
     *
     * Return a script for customer to run in their cloud environment to grant us access to their Azure environment as a downloadable attachment.
     *
     */
    public function testGetCSPMAzureUserScriptsAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCSPMCGPAccount
     *
     * Returns information about the current status of an GCP account..
     *
     */
    public function testGetCSPMCGPAccount()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCSPMGCPUserScripts
     *
     * Return a script for customer to run in their cloud environment to grant us access to their GCP environment.
     *
     */
    public function testGetCSPMGCPUserScripts()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for getCSPMGCPUserScriptsAttachment
     *
     * Return a script for customer to run in their cloud environment to grant us access to their GCP environment as a downloadable attachment.
     *
     */
    public function testGetCSPMGCPUserScriptsAttachment()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for updateCSPMAzureAccountClientID
     *
     * Update an Azure service account in our system by with the user-created client_id created with the public key we've provided.
     *
     */
    public function testUpdateCSPMAzureAccountClientID()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
